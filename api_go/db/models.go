// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
)

type ClubParticipantRole string

const (
	ClubParticipantRoleLEITER        ClubParticipantRole = "LEITER"
	ClubParticipantRoleCOLEITER      ClubParticipantRole = "CO_LEITER"
	ClubParticipantRoleSCHATZMEISTER ClubParticipantRole = "SCHATZMEISTER"
	ClubParticipantRoleMITGLIED      ClubParticipantRole = "MITGLIED"
)

func (e *ClubParticipantRole) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ClubParticipantRole(s)
	case string:
		*e = ClubParticipantRole(s)
	default:
		return fmt.Errorf("unsupported scan type for ClubParticipantRole: %T", src)
	}
	return nil
}

type NullClubParticipantRole struct {
	ClubParticipantRole ClubParticipantRole
	Valid               bool // Valid is true if ClubParticipantRole is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullClubParticipantRole) Scan(value interface{}) error {
	if value == nil {
		ns.ClubParticipantRole, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ClubParticipantRole.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullClubParticipantRole) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ClubParticipantRole), nil
}

type Address struct {
	ID          string
	Street      string
	HouseNumber string
	Location    string
	PostalCode  string
	Country     string
}

type Author struct {
	ID               string
	ExtraInformation sql.NullString
	Name             sql.NullString
	UserIDFk         sql.NullString
}

type Club struct {
	ID        string
	Name      string
	AddressID string
}

type ClubParticipant struct {
	UserID string
	ClubID string
	Role   ClubParticipantRole
}

type Concert struct {
	ID          string
	Description sql.NullString
	DueDate     sql.NullTime
	Hints       sql.NullString
	Location    sql.NullString
	Title       sql.NullString
	UserIDFk    sql.NullString
}

type Element struct {
	Type          string
	ID            string
	CreationDate  sql.NullTime
	Description   sql.NullString
	Name          sql.NullString
	NumberOfPages sql.NullInt32
	UserIDFk      sql.NullString
	Parent        sql.NullString
	AuthorIDFk    sql.NullString
	PdfContent    sql.NullString
}

type Event struct {
	Uid         string
	UserIDFk    string
	Summary     sql.NullString
	Url         sql.NullString
	GeoDateX    sql.NullFloat64
	GeoDateY    sql.NullFloat64
	Location    sql.NullString
	TzID        sql.NullString
	Description sql.NullString
	StartDate   sql.NullTime
	EndDate     sql.NullTime
}

type IcalSync struct {
	ID         string
	UserIDFk   string
	IcalUrl    string
	Type       string
	LastSynced sql.NullTime
}

type NoteInConcert struct {
	ConcertIDFk    string
	NoteIDFk       string
	PlaceInConcert sql.NullInt32
}

type User struct {
	ID               string
	SideBarCollapsed bool
	Username         sql.NullString
	ProfilePicture   sql.NullString
	Email            sql.NullString
	Firstname        sql.NullString
	Lastname         sql.NullString
	Telephonenumber  sql.NullString
	Birthday         sql.NullTime
	Country          sql.NullString
	Postalcode       sql.NullString
	City             sql.NullString
	Street           sql.NullString
}
